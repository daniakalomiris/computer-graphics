#version 330 core

layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;
layout(location = 2) in vec3 vertexColor;

// values that stay constant for the whole mesh.
uniform mat4 ViewProjectionTransform;
uniform mat4 WorldTransform;

// outputs to fragment shader
out vec3 normal;
out vec4 v_color;

void main()
{
    // output position of the vertex, in clip space: MVP * position
    gl_Position =  ViewProjectionTransform * WorldTransform * vec4(vertexPosition_modelspace,1);

    normal = vertexNormal_modelspace;
    v_color = vec4(vertexColor, 1.0f);
}


